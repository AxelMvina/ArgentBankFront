swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions:
    post:
      tags:
        - "User Transactions Module"
      summary: "Returns a list of transactions for a user's multiple accounts."
      description: >
        API to retrieve all transactions associated with a user's multiple accounts.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: >
            Provide an array of `accountIds` to filter by specific accounts.
          required: true
          schema:
            type: "object"
            properties:
              accountIds:
                type: "array"
                items:
                  type: "string"
                description: "Optional list of account IDs to filter transactions by."
      responses:
        '200':
          description: "Returns a list of transactions."
          schema:
            type: "object"
            properties:
              transactions:
                type: "array"
                items:
                  $ref: "#/definitions/Transaction"
              transactionId:
                type: "string"
                description: "The unique identifier of the created transaction (if applicable)."
        '400':
          description: "Bad request. The query syntax is incorrect."
        '401':
          description: "Unauthorized. Authentication is required to access the resource."
        '500':
          description: "Internal Server Error"
  /user/transactions/{transactionId}:
    post:
      tags:
        - "User Transactions Module"
      summary: "Returns details of a specific transaction."
      description: "API for retrieving the details of a specific transaction for a user."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "transactionId"
          in: "path"
          description: "The ID of the transaction."
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Account ID for retrieving the transaction."
          required: true
          schema:
            type: "object"
            properties:
              accountId:
                type: "string"
                description: "The ID of the account to which the transaction is associated."
      responses:
        '200':
          description: "Transaction retrieved successfully"
          schema:
            $ref: "#/definitions/Transaction"
        '400':
          description: "Bad request. The query syntax is incorrect."
        '401':
          description: "Unauthorized. Authentication is required to access the resource."
        '404':
          description: "Transaction not found. The specified transaction does not exist."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - "User Transactions Module"
      summary: "Update or delete the notes and category of a specific transaction."
      description: "API for updating or deleting the notes and category associated with a specific transaction. To delete, send empty strings for notes and category."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "transactionId"
          in: "path"
          description: "The ID of the transaction to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "The new values for notes and category. Send empty strings to delete them."
          required: true
          schema:
            type: "object"
            properties:
              accountId:
                type: "string"
                description: "The ID of the account associated with the transaction."
              notes:
                type: "string"
                description: "The new notes for the transaction. Send an empty string to delete."
              category:
                type: "string"
                description: "The new category for the transaction. Send an empty string to delete."
      responses:
        '200':
          description: "Transaction updated successfully"
          schema:
            $ref: "#/definitions/Transaction"
        '400':
          description: "Bad request. The query syntax is incorrect."
        '401':
          description: "Unauthorized. Authentication is required to access the resource."
        '404':
          description: "Transaction not found. The specified transaction does not exist."
        '500':
          description: "Internal Server Error"

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: "object"
    properties:
      transactionId:
        type: "string"
        description: "The unique identifier of the transaction"
      accountId:
        type: "string"
        description: "The unique identifier of the account associated with the transaction"
      date:
        type: "string"
        format: "date-time"
        description: "The date of the transaction"
      amount:
        type: "number"
        format: "double"
        description: "The amount of the transaction"
      description:
        type: "string"
        description: "Description of the transaction"
      balance:
        type: "number"
        format: "double"
        description: "The account balance after the transaction"
      category:
        type: "string"
        description: "The category of the transaction, e.g., 'Food', 'Entertainment'. An empty string means the category is deleted."
      notes:
        type: "string"
        description: "The notes associated with the transaction. An empty string means the notes are deleted."
  
